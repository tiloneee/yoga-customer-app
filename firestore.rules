rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // All authenticated users can read courses
    match /courses/{courseId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admins can modify courses (via admin app)
    }
    
    // All authenticated users can read class instances
    match /classInstances/{instanceId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admins can modify instances (via admin app)
    }
    
    // Users can read and write their own bookings
    match /bookings/{bookingId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Users can read instructors information
    match /instructors/{instructorId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admins can modify instructors
    }
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
  }
}